<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: msp/msp_config.proto

namespace Msp;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * SigningIdentityInfo represents the configuration information
 * related to the signing identity the peer is to use for generating
 * endorsements
 * </pre>
 *
 * Protobuf type <code>msp.SigningIdentityInfo</code>
 */
class SigningIdentityInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * PublicSigner carries the public information of the signing
     * identity. For an X.509 provider this would be represented by
     * an X.509 certificate
     * </pre>
     *
     * <code>bytes public_signer = 1;</code>
     */
    private $public_signer = '';
    /**
     * <pre>
     * PrivateSigner denotes a reference to the private key of the
     * peer's signing identity
     * </pre>
     *
     * <code>.msp.KeyInfo private_signer = 2;</code>
     */
    private $private_signer = null;

    public function __construct() {
        \GPBMetadata\Msp\MspConfig::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * PublicSigner carries the public information of the signing
     * identity. For an X.509 provider this would be represented by
     * an X.509 certificate
     * </pre>
     *
     * <code>bytes public_signer = 1;</code>
     */
    public function getPublicSigner()
    {
        return $this->public_signer;
    }

    /**
     * <pre>
     * PublicSigner carries the public information of the signing
     * identity. For an X.509 provider this would be represented by
     * an X.509 certificate
     * </pre>
     *
     * <code>bytes public_signer = 1;</code>
     */
    public function setPublicSigner($var)
    {
        GPBUtil::checkString($var, False);
        $this->public_signer = $var;
    }

    /**
     * <pre>
     * PrivateSigner denotes a reference to the private key of the
     * peer's signing identity
     * </pre>
     *
     * <code>.msp.KeyInfo private_signer = 2;</code>
     */
    public function getPrivateSigner()
    {
        return $this->private_signer;
    }

    /**
     * <pre>
     * PrivateSigner denotes a reference to the private key of the
     * peer's signing identity
     * </pre>
     *
     * <code>.msp.KeyInfo private_signer = 2;</code>
     */
    public function setPrivateSigner(&$var)
    {
        GPBUtil::checkMessage($var, \Msp\KeyInfo::class);
        $this->private_signer = $var;
    }

}

