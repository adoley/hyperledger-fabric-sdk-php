<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: peer/transaction.proto

namespace Hyperledger\Fabric\Protos\Peer;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ProcessedTransaction wraps an Envelope that includes a transaction along with an indication
 * of whether the transaction was validated or invalidated by committing peer.
 * The use case is that GetTransactionByID API needs to retrieve the transaction Envelope
 * from block storage, and return it to a client, and indicate whether the transaction
 * was validated or invalidated by committing peer. So that the originally submitted
 * transaction Envelope is not modified, the ProcessedTransaction wrapper is returned.
 *
 * Generated from protobuf message <code>protos.ProcessedTransaction</code>
 */
class ProcessedTransaction extends \Google\Protobuf\Internal\Message
{
    /**
     * An Envelope which includes a processed transaction
     *
     * Generated from protobuf field <code>.common.Envelope transactionEnvelope = 1;</code>
     */
    private $transactionEnvelope = null;
    /**
     * An indication of whether the transaction was validated or invalidated by committing peer
     *
     * Generated from protobuf field <code>int32 validationCode = 2;</code>
     */
    private $validationCode = 0;

    public function __construct() {
        \GPBMetadata\Peer\Transaction::initOnce();
        parent::__construct();
    }

    /**
     * An Envelope which includes a processed transaction
     *
     * Generated from protobuf field <code>.common.Envelope transactionEnvelope = 1;</code>
     * @return \Hyperledger\Fabric\Protos\Common\Envelope
     */
    public function getTransactionEnvelope()
    {
        return $this->transactionEnvelope;
    }

    /**
     * An Envelope which includes a processed transaction
     *
     * Generated from protobuf field <code>.common.Envelope transactionEnvelope = 1;</code>
     * @param \Hyperledger\Fabric\Protos\Common\Envelope $var
     * @return $this
     */
    public function setTransactionEnvelope($var)
    {
        GPBUtil::checkMessage($var, \Hyperledger\Fabric\Protos\Common\Envelope::class);
        $this->transactionEnvelope = $var;

        return $this;
    }

    /**
     * An indication of whether the transaction was validated or invalidated by committing peer
     *
     * Generated from protobuf field <code>int32 validationCode = 2;</code>
     * @return int
     */
    public function getValidationCode()
    {
        return $this->validationCode;
    }

    /**
     * An indication of whether the transaction was validated or invalidated by committing peer
     *
     * Generated from protobuf field <code>int32 validationCode = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setValidationCode($var)
    {
        GPBUtil::checkInt32($var);
        $this->validationCode = $var;

        return $this;
    }

}

