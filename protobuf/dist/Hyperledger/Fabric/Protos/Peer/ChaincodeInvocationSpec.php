<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: peer/chaincode.proto

namespace Hyperledger\Fabric\Protos\Peer;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Carries the chaincode function and its arguments.
 *
 * Generated from protobuf message <code>protos.ChaincodeInvocationSpec</code>
 */
class ChaincodeInvocationSpec extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.protos.ChaincodeSpec chaincode_spec = 1;</code>
     */
    private $chaincode_spec = null;
    /**
     * This field can contain a user-specified ID generation algorithm
     * If supplied, this will be used to generate a ID
     * If not supplied (left empty), sha256base64 will be used
     * The algorithm consists of two parts:
     *  1, a hash function
     *  2, a decoding used to decode user (string) input to bytes
     * Currently, SHA256 with BASE64 is supported (e.g. idGenerationAlg='sha256base64')
     *
     * Generated from protobuf field <code>string id_generation_alg = 2;</code>
     */
    private $id_generation_alg = '';

    public function __construct() {
        \GPBMetadata\Peer\Chaincode::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>.protos.ChaincodeSpec chaincode_spec = 1;</code>
     * @return \Hyperledger\Fabric\Protos\Peer\ChaincodeSpec
     */
    public function getChaincodeSpec()
    {
        return $this->chaincode_spec;
    }

    /**
     * Generated from protobuf field <code>.protos.ChaincodeSpec chaincode_spec = 1;</code>
     * @param \Hyperledger\Fabric\Protos\Peer\ChaincodeSpec $var
     * @return $this
     */
    public function setChaincodeSpec($var)
    {
        GPBUtil::checkMessage($var, \Hyperledger\Fabric\Protos\Peer\ChaincodeSpec::class);
        $this->chaincode_spec = $var;

        return $this;
    }

    /**
     * This field can contain a user-specified ID generation algorithm
     * If supplied, this will be used to generate a ID
     * If not supplied (left empty), sha256base64 will be used
     * The algorithm consists of two parts:
     *  1, a hash function
     *  2, a decoding used to decode user (string) input to bytes
     * Currently, SHA256 with BASE64 is supported (e.g. idGenerationAlg='sha256base64')
     *
     * Generated from protobuf field <code>string id_generation_alg = 2;</code>
     * @return string
     */
    public function getIdGenerationAlg()
    {
        return $this->id_generation_alg;
    }

    /**
     * This field can contain a user-specified ID generation algorithm
     * If supplied, this will be used to generate a ID
     * If not supplied (left empty), sha256base64 will be used
     * The algorithm consists of two parts:
     *  1, a hash function
     *  2, a decoding used to decode user (string) input to bytes
     * Currently, SHA256 with BASE64 is supported (e.g. idGenerationAlg='sha256base64')
     *
     * Generated from protobuf field <code>string id_generation_alg = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setIdGenerationAlg($var)
    {
        GPBUtil::checkString($var, True);
        $this->id_generation_alg = $var;

        return $this;
    }

}

