<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: peer/transaction.proto

namespace Hyperledger\Fabric\Protos\Peer;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * This message is necessary to facilitate the verification of the signature
 * (in the signature field) over the bytes of the transaction (in the
 * transactionBytes field).
 *
 * Generated from protobuf message <code>protos.SignedTransaction</code>
 */
class SignedTransaction extends \Google\Protobuf\Internal\Message
{
    /**
     * The bytes of the Transaction. NDD
     *
     * Generated from protobuf field <code>bytes transaction_bytes = 1;</code>
     */
    private $transaction_bytes = '';
    /**
     * Signature of the transactionBytes The public key of the signature is in
     * the header field of TransactionAction There might be multiple
     * TransactionAction, so multiple headers, but there should be same
     * transactor identity (cert) in all headers
     *
     * Generated from protobuf field <code>bytes signature = 2;</code>
     */
    private $signature = '';

    public function __construct() {
        \GPBMetadata\Peer\Transaction::initOnce();
        parent::__construct();
    }

    /**
     * The bytes of the Transaction. NDD
     *
     * Generated from protobuf field <code>bytes transaction_bytes = 1;</code>
     * @return string
     */
    public function getTransactionBytes()
    {
        return $this->transaction_bytes;
    }

    /**
     * The bytes of the Transaction. NDD
     *
     * Generated from protobuf field <code>bytes transaction_bytes = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTransactionBytes($var)
    {
        GPBUtil::checkString($var, False);
        $this->transaction_bytes = $var;

        return $this;
    }

    /**
     * Signature of the transactionBytes The public key of the signature is in
     * the header field of TransactionAction There might be multiple
     * TransactionAction, so multiple headers, but there should be same
     * transactor identity (cert) in all headers
     *
     * Generated from protobuf field <code>bytes signature = 2;</code>
     * @return string
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     * Signature of the transactionBytes The public key of the signature is in
     * the header field of TransactionAction There might be multiple
     * TransactionAction, so multiple headers, but there should be same
     * transactor identity (cert) in all headers
     *
     * Generated from protobuf field <code>bytes signature = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkString($var, False);
        $this->signature = $var;

        return $this;
    }

}

