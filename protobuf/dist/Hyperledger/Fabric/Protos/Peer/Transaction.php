<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: peer/transaction.proto

namespace Hyperledger\Fabric\Protos\Peer;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The transaction to be sent to the ordering service. A transaction contains
 * one or more TransactionAction. Each TransactionAction binds a proposal to
 * potentially multiple actions. The transaction is atomic meaning that either
 * all actions in the transaction will be committed or none will.  Note that
 * while a Transaction might include more than one Header, the Header.creator
 * field must be the same in each.
 * A single client is free to issue a number of independent Proposal, each with
 * their header (Header) and request payload (ChaincodeProposalPayload).  Each
 * proposal is independently endorsed generating an action
 * (ProposalResponsePayload) with one signature per Endorser. Any number of
 * independent proposals (and their action) might be included in a transaction
 * to ensure that they are treated atomically.
 *
 * Generated from protobuf message <code>protos.Transaction</code>
 */
class Transaction extends \Google\Protobuf\Internal\Message
{
    /**
     * The payload is an array of TransactionAction. An array is necessary to
     * accommodate multiple actions per transaction
     *
     * Generated from protobuf field <code>repeated .protos.TransactionAction actions = 1;</code>
     */
    private $actions;

    public function __construct() {
        \GPBMetadata\Peer\Transaction::initOnce();
        parent::__construct();
    }

    /**
     * The payload is an array of TransactionAction. An array is necessary to
     * accommodate multiple actions per transaction
     *
     * Generated from protobuf field <code>repeated .protos.TransactionAction actions = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getActions()
    {
        return $this->actions;
    }

    /**
     * The payload is an array of TransactionAction. An array is necessary to
     * accommodate multiple actions per transaction
     *
     * Generated from protobuf field <code>repeated .protos.TransactionAction actions = 1;</code>
     * @param \Hyperledger\Fabric\Protos\Peer\TransactionAction[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setActions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Hyperledger\Fabric\Protos\Peer\TransactionAction::class);
        $this->actions = $arr;

        return $this;
    }

}

