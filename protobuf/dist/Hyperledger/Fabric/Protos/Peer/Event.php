<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: peer/events.proto

namespace Hyperledger\Fabric\Protos\Peer;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *Event is used by
 *  - consumers (adapters) to send Register
 *  - producer to advertise supported types and events
 *
 * Generated from protobuf message <code>protos.Event</code>
 */
class Event extends \Google\Protobuf\Internal\Message
{
    /**
     * Creator of the event, specified as a certificate chain
     *
     * Generated from protobuf field <code>bytes creator = 6;</code>
     */
    private $creator = '';
    protected $Event;

    public function __construct() {
        \GPBMetadata\Peer\Events::initOnce();
        parent::__construct();
    }

    /**
     *Register consumer sent event
     *
     * Generated from protobuf field <code>.protos.Register register = 1;</code>
     * @return \Hyperledger\Fabric\Protos\Peer\Register
     */
    public function getRegister()
    {
        return $this->readOneof(1);
    }

    /**
     *Register consumer sent event
     *
     * Generated from protobuf field <code>.protos.Register register = 1;</code>
     * @param \Hyperledger\Fabric\Protos\Peer\Register $var
     * @return $this
     */
    public function setRegister($var)
    {
        GPBUtil::checkMessage($var, \Hyperledger\Fabric\Protos\Peer\Register::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     *producer events
     *
     * Generated from protobuf field <code>.common.Block block = 2;</code>
     * @return \Hyperledger\Fabric\Protos\Common\Block
     */
    public function getBlock()
    {
        return $this->readOneof(2);
    }

    /**
     *producer events
     *
     * Generated from protobuf field <code>.common.Block block = 2;</code>
     * @param \Hyperledger\Fabric\Protos\Common\Block $var
     * @return $this
     */
    public function setBlock($var)
    {
        GPBUtil::checkMessage($var, \Hyperledger\Fabric\Protos\Common\Block::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.protos.ChaincodeEvent chaincode_event = 3;</code>
     * @return \Hyperledger\Fabric\Protos\Peer\ChaincodeEvent
     */
    public function getChaincodeEvent()
    {
        return $this->readOneof(3);
    }

    /**
     * Generated from protobuf field <code>.protos.ChaincodeEvent chaincode_event = 3;</code>
     * @param \Hyperledger\Fabric\Protos\Peer\ChaincodeEvent $var
     * @return $this
     */
    public function setChaincodeEvent($var)
    {
        GPBUtil::checkMessage($var, \Hyperledger\Fabric\Protos\Peer\ChaincodeEvent::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.protos.Rejection rejection = 4;</code>
     * @return \Hyperledger\Fabric\Protos\Peer\Rejection
     */
    public function getRejection()
    {
        return $this->readOneof(4);
    }

    /**
     * Generated from protobuf field <code>.protos.Rejection rejection = 4;</code>
     * @param \Hyperledger\Fabric\Protos\Peer\Rejection $var
     * @return $this
     */
    public function setRejection($var)
    {
        GPBUtil::checkMessage($var, \Hyperledger\Fabric\Protos\Peer\Rejection::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     *Unregister consumer sent events
     *
     * Generated from protobuf field <code>.protos.Unregister unregister = 5;</code>
     * @return \Hyperledger\Fabric\Protos\Peer\Unregister
     */
    public function getUnregister()
    {
        return $this->readOneof(5);
    }

    /**
     *Unregister consumer sent events
     *
     * Generated from protobuf field <code>.protos.Unregister unregister = 5;</code>
     * @param \Hyperledger\Fabric\Protos\Peer\Unregister $var
     * @return $this
     */
    public function setUnregister($var)
    {
        GPBUtil::checkMessage($var, \Hyperledger\Fabric\Protos\Peer\Unregister::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Creator of the event, specified as a certificate chain
     *
     * Generated from protobuf field <code>bytes creator = 6;</code>
     * @return string
     */
    public function getCreator()
    {
        return $this->creator;
    }

    /**
     * Creator of the event, specified as a certificate chain
     *
     * Generated from protobuf field <code>bytes creator = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setCreator($var)
    {
        GPBUtil::checkString($var, False);
        $this->creator = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getEvent()
    {
        return $this->whichOneof("Event");
    }

}

