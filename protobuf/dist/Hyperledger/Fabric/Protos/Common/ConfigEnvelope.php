<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/configtx.proto

namespace Hyperledger\Fabric\Protos\Common;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ConfigEnvelope is designed to contain _all_ configuration for a chain with no dependency
 * on previous configuration transactions.
 * It is generated with the following scheme:
 *   1. Retrieve the existing configuration
 *   2. Note the config properties (ConfigValue, ConfigPolicy, ConfigGroup) to be modified
 *   3. Add any intermediate ConfigGroups to the ConfigUpdate.read_set (sparsely)
 *   4. Add any additional desired dependencies to ConfigUpdate.read_set (sparsely)
 *   5. Modify the config properties, incrementing each version by 1, set them in the ConfigUpdate.write_set
 *      Note: any element not modified but specified should already be in the read_set, so may be specified sparsely
 *   6. Create ConfigUpdate message and marshal it into ConfigUpdateEnvelope.update and encode the required signatures
 *     a) Each signature is of type ConfigSignature
 *     b) The ConfigSignature signature is over the concatenation of signature_header and the ConfigUpdate bytes (which includes a ChainHeader)
 *   5. Submit new Config for ordering in Envelope signed by submitter
 *     a) The Envelope Payload has data set to the marshaled ConfigEnvelope
 *     b) The Envelope Payload has a header of type Header.Type.CONFIG_UPDATE
 * The configuration manager will verify:
 *   1. All items in the read_set exist at the read versions
 *   2. All items in the write_set at a different version than, or not in, the read_set have been appropriately signed according to their mod_policy
 *   3. The new configuration satisfies the ConfigSchema
 *
 * Generated from protobuf message <code>common.ConfigEnvelope</code>
 */
class ConfigEnvelope extends \Google\Protobuf\Internal\Message
{
    /**
     * A marshaled Config structure
     *
     * Generated from protobuf field <code>.common.Config config = 1;</code>
     */
    private $config = null;
    /**
     * The last CONFIG_UPDATE message which generated this current configuration
     *
     * Generated from protobuf field <code>.common.Envelope last_update = 2;</code>
     */
    private $last_update = null;

    public function __construct() {
        \GPBMetadata\Common\Configtx::initOnce();
        parent::__construct();
    }

    /**
     * A marshaled Config structure
     *
     * Generated from protobuf field <code>.common.Config config = 1;</code>
     * @return \Hyperledger\Fabric\Protos\Common\Config
     */
    public function getConfig()
    {
        return $this->config;
    }

    /**
     * A marshaled Config structure
     *
     * Generated from protobuf field <code>.common.Config config = 1;</code>
     * @param \Hyperledger\Fabric\Protos\Common\Config $var
     * @return $this
     */
    public function setConfig($var)
    {
        GPBUtil::checkMessage($var, \Hyperledger\Fabric\Protos\Common\Config::class);
        $this->config = $var;

        return $this;
    }

    /**
     * The last CONFIG_UPDATE message which generated this current configuration
     *
     * Generated from protobuf field <code>.common.Envelope last_update = 2;</code>
     * @return \Hyperledger\Fabric\Protos\Common\Envelope
     */
    public function getLastUpdate()
    {
        return $this->last_update;
    }

    /**
     * The last CONFIG_UPDATE message which generated this current configuration
     *
     * Generated from protobuf field <code>.common.Envelope last_update = 2;</code>
     * @param \Hyperledger\Fabric\Protos\Common\Envelope $var
     * @return $this
     */
    public function setLastUpdate($var)
    {
        GPBUtil::checkMessage($var, \Hyperledger\Fabric\Protos\Common\Envelope::class);
        $this->last_update = $var;

        return $this;
    }

}

