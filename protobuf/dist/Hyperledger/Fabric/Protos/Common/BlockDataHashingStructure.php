<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/configuration.proto

namespace Hyperledger\Fabric\Protos\Common;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * BlockDataHashingStructure is encoded into the configuration transaction as a configuration item of
 * type Chain with a Key of "BlockDataHashingStructure" and a Value of HashingAlgorithm as marshaled protobuf bytes
 *
 * Generated from protobuf message <code>common.BlockDataHashingStructure</code>
 */
class BlockDataHashingStructure extends \Google\Protobuf\Internal\Message
{
    /**
     * width specifies the width of the Merkle tree to use when computing the BlockDataHash
     * in order to replicate flat hashing, set this width to MAX_UINT32
     *
     * Generated from protobuf field <code>uint32 width = 1;</code>
     */
    private $width = 0;

    public function __construct() {
        \GPBMetadata\Common\Configuration::initOnce();
        parent::__construct();
    }

    /**
     * width specifies the width of the Merkle tree to use when computing the BlockDataHash
     * in order to replicate flat hashing, set this width to MAX_UINT32
     *
     * Generated from protobuf field <code>uint32 width = 1;</code>
     * @return int
     */
    public function getWidth()
    {
        return $this->width;
    }

    /**
     * width specifies the width of the Merkle tree to use when computing the BlockDataHash
     * in order to replicate flat hashing, set this width to MAX_UINT32
     *
     * Generated from protobuf field <code>uint32 width = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setWidth($var)
    {
        GPBUtil::checkUint32($var);
        $this->width = $var;

        return $this;
    }

}

