<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: peer/query.proto

namespace Protos;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * ChaincodeInfo contains general information about an installed/instantiated
 * chaincode
 * </pre>
 *
 * Protobuf type <code>protos.ChaincodeInfo</code>
 */
class ChaincodeInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * <code>string version = 2;</code>
     */
    private $version = '';
    /**
     * <pre>
     * the path as specified by the install/instantiate transaction
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    private $path = '';
    /**
     * <pre>
     * the chaincode function upon instantiation and its arguments. This will be
     * blank if the query is returning information about installed chaincodes.
     * </pre>
     *
     * <code>string input = 4;</code>
     */
    private $input = '';
    /**
     * <pre>
     * the name of the ESCC for this chaincode. This will be
     * blank if the query is returning information about installed chaincodes.
     * </pre>
     *
     * <code>string escc = 5;</code>
     */
    private $escc = '';
    /**
     * <pre>
     * the name of the VSCC for this chaincode. This will be
     * blank if the query is returning information about installed chaincodes.
     * </pre>
     *
     * <code>string vscc = 6;</code>
     */
    private $vscc = '';

    public function __construct() {
        \GPBMetadata\Peer\Query::initOnce();
        parent::__construct();
    }

    /**
     * <code>string name = 1;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <code>string name = 1;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <code>string version = 2;</code>
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * <code>string version = 2;</code>
     */
    public function setVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->version = $var;
    }

    /**
     * <pre>
     * the path as specified by the install/instantiate transaction
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * <pre>
     * the path as specified by the install/instantiate transaction
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    public function setPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->path = $var;
    }

    /**
     * <pre>
     * the chaincode function upon instantiation and its arguments. This will be
     * blank if the query is returning information about installed chaincodes.
     * </pre>
     *
     * <code>string input = 4;</code>
     */
    public function getInput()
    {
        return $this->input;
    }

    /**
     * <pre>
     * the chaincode function upon instantiation and its arguments. This will be
     * blank if the query is returning information about installed chaincodes.
     * </pre>
     *
     * <code>string input = 4;</code>
     */
    public function setInput($var)
    {
        GPBUtil::checkString($var, True);
        $this->input = $var;
    }

    /**
     * <pre>
     * the name of the ESCC for this chaincode. This will be
     * blank if the query is returning information about installed chaincodes.
     * </pre>
     *
     * <code>string escc = 5;</code>
     */
    public function getEscc()
    {
        return $this->escc;
    }

    /**
     * <pre>
     * the name of the ESCC for this chaincode. This will be
     * blank if the query is returning information about installed chaincodes.
     * </pre>
     *
     * <code>string escc = 5;</code>
     */
    public function setEscc($var)
    {
        GPBUtil::checkString($var, True);
        $this->escc = $var;
    }

    /**
     * <pre>
     * the name of the VSCC for this chaincode. This will be
     * blank if the query is returning information about installed chaincodes.
     * </pre>
     *
     * <code>string vscc = 6;</code>
     */
    public function getVscc()
    {
        return $this->vscc;
    }

    /**
     * <pre>
     * the name of the VSCC for this chaincode. This will be
     * blank if the query is returning information about installed chaincodes.
     * </pre>
     *
     * <code>string vscc = 6;</code>
     */
    public function setVscc($var)
    {
        GPBUtil::checkString($var, True);
        $this->vscc = $var;
    }

}

