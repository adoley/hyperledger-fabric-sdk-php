<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: msp/msp_principal.proto

namespace Common;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * MSPRole governs the organization of the Principal
 * field of an MSPPrincipal when it aims to define one of the
 * two dedicated roles within an MSP: Admin and Members.
 * </pre>
 *
 * Protobuf type <code>common.MSPRole</code>
 */
class MSPRole extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * MSPIdentifier represents the identifier of the MSP this principal
     * refers to
     * </pre>
     *
     * <code>string msp_identifier = 1;</code>
     */
    private $msp_identifier = '';
    /**
     * <pre>
     * MSPRoleType defines which of the available, pre-defined MSP-roles
     * an identiy should posess inside the MSP with identifier MSPidentifier
     * </pre>
     *
     * <code>.common.MSPRole.MSPRoleType role = 2;</code>
     */
    private $role = 0;

    public function __construct() {
        \GPBMetadata\Msp\MspPrincipal::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * MSPIdentifier represents the identifier of the MSP this principal
     * refers to
     * </pre>
     *
     * <code>string msp_identifier = 1;</code>
     */
    public function getMspIdentifier()
    {
        return $this->msp_identifier;
    }

    /**
     * <pre>
     * MSPIdentifier represents the identifier of the MSP this principal
     * refers to
     * </pre>
     *
     * <code>string msp_identifier = 1;</code>
     */
    public function setMspIdentifier($var)
    {
        GPBUtil::checkString($var, True);
        $this->msp_identifier = $var;
    }

    /**
     * <pre>
     * MSPRoleType defines which of the available, pre-defined MSP-roles
     * an identiy should posess inside the MSP with identifier MSPidentifier
     * </pre>
     *
     * <code>.common.MSPRole.MSPRoleType role = 2;</code>
     */
    public function getRole()
    {
        return $this->role;
    }

    /**
     * <pre>
     * MSPRoleType defines which of the available, pre-defined MSP-roles
     * an identiy should posess inside the MSP with identifier MSPidentifier
     * </pre>
     *
     * <code>.common.MSPRole.MSPRoleType role = 2;</code>
     */
    public function setRole($var)
    {
        GPBUtil::checkEnum($var, \Common\MSPRole_MSPRoleType::class);
        $this->role = $var;
    }

}

