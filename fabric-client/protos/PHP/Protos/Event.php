<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: peer/events.proto

namespace Protos;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 *Event is used by
 *  - consumers (adapters) to send Register
 *  - producer to advertise supported types and events
 * </pre>
 *
 * Protobuf type <code>protos.Event</code>
 */
class Event extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Creator of the event, specified as a certificate chain
     * </pre>
     *
     * <code>bytes creator = 6;</code>
     */
    private $creator = '';
    protected $Event;

    public function __construct() {
        \GPBMetadata\Peer\Events::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     *Register consumer sent event
     * </pre>
     *
     * <code>.protos.Register register = 1;</code>
     */
    public function getRegister()
    {
        return $this->readOneof(1);
    }

    /**
     * <pre>
     *Register consumer sent event
     * </pre>
     *
     * <code>.protos.Register register = 1;</code>
     */
    public function setRegister(&$var)
    {
        GPBUtil::checkMessage($var, \Protos\Register::class);
        $this->writeOneof(1, $var);
    }

    /**
     * <pre>
     *producer events
     * </pre>
     *
     * <code>.common.Block block = 2;</code>
     */
    public function getBlock()
    {
        return $this->readOneof(2);
    }

    /**
     * <pre>
     *producer events
     * </pre>
     *
     * <code>.common.Block block = 2;</code>
     */
    public function setBlock(&$var)
    {
        GPBUtil::checkMessage($var, \Common\Block::class);
        $this->writeOneof(2, $var);
    }

    /**
     * <code>.protos.ChaincodeEvent chaincode_event = 3;</code>
     */
    public function getChaincodeEvent()
    {
        return $this->readOneof(3);
    }

    /**
     * <code>.protos.ChaincodeEvent chaincode_event = 3;</code>
     */
    public function setChaincodeEvent(&$var)
    {
        GPBUtil::checkMessage($var, \Protos\ChaincodeEvent::class);
        $this->writeOneof(3, $var);
    }

    /**
     * <code>.protos.Rejection rejection = 4;</code>
     */
    public function getRejection()
    {
        return $this->readOneof(4);
    }

    /**
     * <code>.protos.Rejection rejection = 4;</code>
     */
    public function setRejection(&$var)
    {
        GPBUtil::checkMessage($var, \Protos\Rejection::class);
        $this->writeOneof(4, $var);
    }

    /**
     * <pre>
     *Unregister consumer sent events
     * </pre>
     *
     * <code>.protos.Unregister unregister = 5;</code>
     */
    public function getUnregister()
    {
        return $this->readOneof(5);
    }

    /**
     * <pre>
     *Unregister consumer sent events
     * </pre>
     *
     * <code>.protos.Unregister unregister = 5;</code>
     */
    public function setUnregister(&$var)
    {
        GPBUtil::checkMessage($var, \Protos\Unregister::class);
        $this->writeOneof(5, $var);
    }

    /**
     * <pre>
     * Creator of the event, specified as a certificate chain
     * </pre>
     *
     * <code>bytes creator = 6;</code>
     */
    public function getCreator()
    {
        return $this->creator;
    }

    /**
     * <pre>
     * Creator of the event, specified as a certificate chain
     * </pre>
     *
     * <code>bytes creator = 6;</code>
     */
    public function setCreator($var)
    {
        GPBUtil::checkString($var, False);
        $this->creator = $var;
    }

    public function getEvent()
    {
        return $this->whichOneof("Event");
    }

}

